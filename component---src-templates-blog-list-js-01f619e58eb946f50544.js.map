{"version":3,"sources":["webpack://flexible-gatsby/./src/templates/blog-list.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","pageContext","currentPage","isFirst","isLast","numPages","prevPage","toString","nextPage","keywords","className","map","node","m","moment","frontmatter","date","format","time_UK","tz","time_CH","end_UK","end_CH","key","fields","slug","img","childImageSharp","gatsbyImageData","Link","to","style","backgroundImage","images","fallback","src","excerpt","role","rel","React"],"mappings":"sMAOMA,E,6FACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAH9B,EAI2BR,KAAKC,MAAMQ,YAArCC,EAJD,EAICA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IANR,EAIcG,SAGfC,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAEnC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEV,MAAOH,EACPe,SAAU,CAAC,OAAD,iCAEZ,uBAAKC,UAAU,wBACZZ,EAAMa,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAIC,IAAOF,EAAKG,YAAYC,KAAM,0BAClCA,EAAOH,EAAEI,OAAF,WACPC,EAAUL,EAAEM,GAAG,iBAAiBF,OAAtB,SACVG,EAAUP,EAAEM,GAAG,iBAAiBF,OAAtB,SACVI,EAASR,EAAEM,GAAG,iBAAiBF,OAAtB,SACTK,EAAST,EAAEM,GAAG,iBAAiBF,OAAtB,SACf,OACE,2BAASP,UAAU,OAAOa,IAAKX,EAAKY,OAAOC,MACxCb,EAAKG,YAAYW,KAChBd,EAAKG,YAAYW,IAAIC,iBACrBf,EAAKG,YAAYW,IAAIC,gBAAgBC,iBACnC,gBAAC,EAAAC,KAAD,CACEC,GAAIlB,EAAKY,OAAOC,KAChBf,UAAU,iBACVqB,MAAO,CACLC,gBAAgB,OAAQpB,EAAKG,YAAYW,IAAIC,gBAAgBC,gBAAgBK,OAAOC,SAASC,IAA9E,OAIvB,uBAAKzB,UAAU,gBACb,sBAAIA,UAAU,cACZ,gBAAC,EAAAmB,KAAD,CAAMC,GAAIlB,EAAKY,OAAOC,MAAOb,EAAKG,YAAYlB,QAEhD,yBAAIe,EAAKwB,SACT,wBAAM1B,UAAU,aACbM,EADH,KACWE,EADX,IACqBG,EADrB,UACoCD,EADpC,IAC8CE,EAD9C,cAOR,uBAAKZ,UAAU,aACb,uBAAKA,UAAU,aAAa2B,KAAK,cAC/B,2BACIlC,GACA,yBACE,gBAAC,EAAA0B,KAAD,CAAMC,GAAIxB,EAAUgC,IAAI,OAAO5B,UAAU,eAAzC,oBAKJ,2BACEN,GACA,yBACE,gBAAC,EAAAyB,KAAD,CAAMC,GAAItB,EAAU8B,IAAI,OAAO5B,UAAU,eAAzC,sB,GA/DI6B,aA6ExB","file":"component---src-templates-blog-list-js-01f619e58eb946f50544.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport DefaultLayout from '../components/layout'\nimport SEO from '../components/seo'\nimport moment from 'moment-timezone'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString()\n    const nextPage = (currentPage + 1).toString()\n\n    return (\n      <DefaultLayout>\n        <SEO\n          title={siteTitle}\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <div className=\"content-box clearfix\">\n          {posts.map(({ node }) => {\n            const m = moment(node.frontmatter.date, 'YYYY-MM-DD hh:mm:ss ZZ')\n            const date = m.format(`MMMM DD`)\n            const time_UK = m.tz('Europe/London').format(`HH:mm`)\n            const time_CH = m.tz('Europe/Zurich').format(`HH:mm`)\n            const end_UK = m.tz('Europe/London').format(`HH:mm`)\n            const end_CH = m.tz('Europe/Zurich').format(`HH:mm`)\n            return (\n              <article className=\"post\" key={node.fields.slug}>\n                {node.frontmatter.img &&\n                  node.frontmatter.img.childImageSharp &&\n                  node.frontmatter.img.childImageSharp.gatsbyImageData && (\n                    <Link\n                      to={node.fields.slug}\n                      className=\"post-thumbnail\"\n                      style={{\n                        backgroundImage: `url(${node.frontmatter.img.childImageSharp.gatsbyImageData.images.fallback.src})`,\n                      }}\n                    />\n                  )}\n                <div className=\"post-content\">\n                  <h2 className=\"post-title\">\n                    <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n                  </h2>\n                  <p>{node.excerpt}</p>\n                  <span className=\"post-date\">\n                    {date}, {time_UK}-{end_UK} (UK), {time_CH}-{end_CH} (CH)\n                  </span>\n                </div>\n              </article>\n            )\n          })}\n          <div className=\"container\">\n            <nav className=\"pagination\" role=\"navigation\">\n              <ul>\n                {!isFirst && (\n                  <p>\n                    <Link to={prevPage} rel=\"prev\" className=\"newer-posts\">\n                      ← Previous Page\n                    </Link>\n                  </p>\n                )}\n                <p></p>\n                {!isLast && (\n                  <p>\n                    <Link to={nextPage} rel=\"next\" className=\"older-posts\">\n                      Next Page →\n                    </Link>\n                  </p>\n                )}\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </DefaultLayout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date\n            end\n            title\n            img {\n              childImageSharp {\n                gatsbyImageData(\n                  placeholder: BLURRED\n                  layout: FULL_WIDTH\n                  formats: [AUTO, AVIF, WEBP]\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}